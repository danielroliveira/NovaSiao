'
'---------------------------------------------------------------------------------------
'--- BLOQUEIA PRESS A TECLA (+)
'---------------------------------------------------------------------------------------
Private Sub me_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Me.KeyPress
    '
    If e.KeyChar = "+" Then
        '--- cria uma lista de controles que serao impedidos de receber '+'
        Dim controlesBloqueados As String() = {
            "txtRGProduto",
            "txtProdutoTipo",
            "txtDesconto"
        }
        '
        If controlesBloqueados.Contains(ActiveControl.Name) Then
            e.Handled = True
        End If
        '
    End If
    '
End Sub

'
'---------------------------------------------------------------------------------------
'--- EXECUTAR A FUNCAO DO BOTAO QUANDO PRESSIONA A TECLA (+) NO CONTROLE
'--- ACIONA ATALHO TECLA (+) E (DEL) | IMPEDE INSERIR TEXTO NOS CONTROLES
'---------------------------------------------------------------------------------------
Private Sub Control_KeyDown(sender As Object, e As KeyEventArgs) _
    Handles txtRGProduto.KeyDown,
            txtProdutoTipo.KeyDown,
            txtProdutoSubTipo.KeyDown

    '
    Dim ctr As Control = DirectCast(sender, Control)
    '
    If e.KeyCode = Keys.Add Then
        e.Handled = True
        '
        Select Case ctr.Name
            Case "txtRGProduto"
                btnProcuraRG_Click(New Object, New EventArgs)
            Case "txtProdutoTipo"
                ProcurarEscolherTipo(sender)
            Case "txtProdutoSubTipo"
                ProcurarEscolherTipo(sender)
            Case "txtProdutoCategoria"
                ProcurarEscolherTipo(sender)
        End Select
        '
    ElseIf e.KeyCode = Keys.Delete Then
        e.Handled = True
        Select Case ctr.Name
            Case "txtProdutoTipo"
                If Not IsNothing(_produto.IDProdutoTipo) Then Sit = FlagEstado.Alterado
                txtProdutoTipo.Clear()
                _produto.IDProdutoTipo = Nothing
            Case "txtProdutoSubTipo"
                If Not IsNothing(_produto.IDProdutoSubTipo) Then Sit = FlagEstado.Alterado
                txtProdutoSubTipo.Clear()
                _produto.IDProdutoSubTipo = Nothing
        End Select
        '
    Else
        '--- cria uma lista de controles que serão bloqueados de alteracao
        Dim controlesBloqueados As New List(Of String)
        controlesBloqueados.AddRange({"txtProdutoTipo", "txtProdutoSubTipo", "txtProdutoCategoria"})
        '
        If controlesBloqueados.Contains(ctr.Name) Then
            e.Handled = True
            e.SuppressKeyPress = True
        End If
    End If
    '
End Sub

'
'---------------------------------------------------------------------------------------
' ADD HANDLER EVENTO KEYDOWN DOS CONTROLES COM VTAB
'---------------------------------------------------------------------------------------
Private Sub HandlerKeyDownControl()
    '
    '--- Tipos de Controles
    Dim myTypes As Type() = {GetType(TextBox),
                                GetType(ComboBox),
                                GetType(MaskedTextBox),
                                GetType(Controles.Text_Monetario)}
    '
    '--- para cada TabPage no tabPrincipal
    For Each t As vTabPage In tabPrincipal.TabPages
        '
        '--- para cada Controle no TabPage
        For Each c As Control In t.Controls '--- se o controle for textbox então
            '

            If myTypes.Contains(c.GetType) Then
                AddHandler c.KeyDown, AddressOf txtControl_KeyDown
            End If
            '
        Next
        '
    Next
    '
End Sub

'
'---------------------------------------------------------------------------------------
'--- SUBSTITUI A TECLA (ENTER) PELA (TAB)
'---------------------------------------------------------------------------------------
Private Sub txtControl_KeyDown(sender As Object, e As KeyEventArgs) _
	Handles txtProduto.KeyDown, txtRGProduto.KeyDown, txtPVenda.KeyDown
    '
    If e.KeyCode = Keys.Enter Then
        e.SuppressKeyPress = True
        SendKeys.Send("{Tab}")
    End If
    '
End Sub

'
'------------------------------------------------------------------------------------------
' FAZ A TECLA ESC FECHAR O FORM
'------------------------------------------------------------------------------------------
Private Sub Me_KeyDown(sender As Object, e As KeyEventArgs) Handles Me.KeyDown
    If e.KeyCode = Keys.Escape Then
        e.Handled = True
        '
        btnCancelar_Click(New Object, New EventArgs)
    End If
End Sub

'
'------------------------------------------------------------------------------------------
'--- QUANDO A TECLA CIMA E BAIXO NAVEGA ENTRE OS ITENS DA LISTAGEM
'------------------------------------------------------------------------------------------
Private Sub Me_KeyDown(sender As Object, e As KeyEventArgs) Handles Me.KeyDown
        '
    If e.KeyCode = Keys.Up Then
        e.Handled = True
        '
        If lstItens.Items.Count > 0 Then
            If lstItens.SelectedItems.Count > 0 Then
                Dim i As Integer = lstItens.SelectedItems(0).Index
                '
                lstItens.Items(i).Selected = False
                '
                If i = 0 Then
                    i = lstItens.Items.Count
                End If
                '
                lstItens.Items(i - 1).Selected = True
                lstItens.EnsureVisible(i - 1)
            Else
                lstItens.Items(0).Selected = True
                lstItens.EnsureVisible(0)
            End If
        End If
        '
    ElseIf e.KeyCode = Keys.Down Then
        e.Handled = True
        '
        If lstItens.Items.Count > 0 Then
            If lstItens.SelectedItems.Count > 0 Then
                Dim i As Integer = lstItens.SelectedItems(0).Index
                '
                lstItens.Items(i).Selected = False
                '
                If i = lstItens.Items.Count - 1 Then
                    i = -1
                End If
                '
                lstItens.Items(i + 1).Selected = True
                lstItens.EnsureVisible(i + 1)
            Else
                lstItens.Items(0).Selected = True
            End If
        End If
        '
    End If
End Sub


'
'---------------------------------------------------------------------------------------
' DIGITAR SOMENTE NUMEROS NO CONTROLE
'---------------------------------------------------------------------------------------
	If Not Char.IsNumber(e.KeyChar) And Not e.KeyChar = vbBack Then
		e.Handled = True
	End If

'
'---------------------------------------------------------------------------------------
' SOMENTE NUMEROS E LETRAS UPPER CASE
'---------------------------------------------------------------------------------------
Private Sub txtConhecimento_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txtConhecimento.KeyPress
    '
    If Char.IsNumber(e.KeyChar) Then
        e.Handled = False
    ElseIf e.KeyChar = vbBack Then
        e.Handled = False
    ElseIf Char.IsLetter(e.KeyChar) Then
        DirectCast(sender, TextBox).SelectedText = Char.ToUpper(e.KeyChar)
        e.Handled = True
    Else
        e.Handled = True
    End If
    '
End Sub

'
'---------------------------------------------------------------------------------------
' CRIA UM ARQUIVO XSD A PARTIR DE UM XML
'---------------------------------------------------------------------------------------
    Dim ds As DataSet = New DataSet()
    ds.ReadXml(xmlCaminhoCompleto, XmlReadMode.InferTypedSchema)
    ds.WriteXmlSchema(pasta & "\teste.xsd")

'
'---------------------------------------------------------------------------------------
' REDESENHA A BORDER DO FORM
'---------------------------------------------------------------------------------------
	Dim rect As New Rectangle(0, 0, Me.ClientSize.Width - 1, Me.ClientSize.Height - 1)
	Dim pen As New Pen(Color.SlateGray, 3)
	'
	Me.Refresh()
	Me.CreateGraphics.DrawRectangle(pen, rect)
	'

'---------------------------------------------------------------------------------------
' EVITA DIGITACAO DE TEXTO
'---------------------------------------------------------------------------------------

    Private Sub txtDesconto_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txtDesconto.KeyPress
        '
        If Char.IsNumber(e.KeyChar) OrElse New Char() {vbBack, ","}.Contains(e.KeyChar) Then
            e.Handled = False
        ElseIf e.KeyChar = "."c Then
            DirectCast(sender, TextBox).SelectedText = ","
            e.Handled = True
        Else
            e.Handled = True
        End If
		'
	End Sub

    Private Sub Text_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txtIdentificador.KeyPress
		'
        If Char.IsNumber(e.KeyChar) Then
            e.Handled = False
        ElseIf e.KeyChar = ","c Then
            e.Handled = False
        ElseIf e.KeyChar = "."c Then
            DirectCast(sender, TextBox).SelectedText = ","
            e.Handled = True
        ElseIf e.KeyChar = vbBack Then
            e.Handled = False
        ElseIf Char.IsLower(e.KeyChar) Then
            DirectCast(sender, TextBox).SelectedText = Char.ToUpper(e.KeyChar)
            e.Handled = True
        End If
		'
    End Sub

	'
    '-------------------------------------------------------------------------------------------------
    '--- QUANDO PRESSIONA A TECLA ESC FECHA O FORMULARIO
    '--- QUANDO A TECLA CIMA E BAIXO NAVEGA ENTRE OS ITENS DO DATAGRID
    '-------------------------------------------------------------------------------------------------
    Private Sub Me_KeyDown(sender As Object, e As KeyEventArgs) Handles Me.KeyDown
        If e.KeyCode = Keys.Escape Then
            e.Handled = True
            btnFechar_Click(New Object, New EventArgs)
            '
        ElseIf e.KeyCode = Keys.Up Then
            '
            '--- garante que o combo não está aberto
            If cmbAtivo.DroppedDown = True Then Exit Sub
            '
            e.Handled = True
            '
            If dgvListagem.Rows.Count > 0 Then
                If dgvListagem.SelectedRows.Count > 0 Then
                    Dim i As Integer = dgvListagem.SelectedRows(0).Index
                    '
                    dgvListagem.Rows(i).Selected = False
                    '
                    If i = 0 Then
                        i = dgvListagem.Rows.Count
                    End If
                    '
                    dgvListagem.Rows(i - 1).Selected = True
                Else
                    dgvListagem.Rows(0).Selected = True
                End If
				'
                dgvListagem.FirstDisplayedScrollingRowIndex = dgvListagem.SelectedRows(0).Index
				dgvListagem.SelectedRows(0).Cells(0).Selected = True
                '
            End If
            '
        ElseIf e.KeyCode = Keys.Down Then
            '
            '--- garante que o combo não está aberto
            If cmbAtivo.DroppedDown = True Then Exit Sub
            '
            e.Handled = True
            '
            If dgvListagem.Rows.Count > 0 Then
                If dgvListagem.SelectedRows.Count > 0 Then
                    Dim i As Integer = dgvListagem.SelectedRows(0).Index
                    '
                    dgvListagem.Rows(i).Selected = False
                    '
                    If i = dgvListagem.Rows.Count - 1 Then
                        i = -1
                    End If
                    '
                    dgvListagem.Rows(i + 1).Selected = True
                Else
                    dgvListagem.Rows(0).Selected = True
                End If
			    '
                dgvListagem.FirstDisplayedScrollingRowIndex = dgvListagem.SelectedRows(0).Index
				dgvListagem.SelectedRows(0).Cells(0).Selected = True
				'
            End If
            '
        End If
    End Sub

	'
	'----------------------------------------------------------------------------------
	'--- RESIZE FONT SIZE LABEL TO FIT ALL TEXT
	'----------------------------------------------------------------------------------
	Private Sub ResizeFontLabel(myLabel As Label)
        '
        Dim lblFont As Font = New Font(myLabel.Font.FontFamily, myLabel.Font.Size, myLabel.Font.Style)
        '
        While myLabel.Width < TextRenderer.MeasureText(myLabel.Text, lblFont).Width
            myLabel.Font = New Font(myLabel.Font.FontFamily, myLabel.Font.Size - 0.5F, myLabel.Font.Style)
            lblFont = New Font(myLabel.Font.FontFamily, myLabel.Font.Size, myLabel.Font.Style)
        End While
        '
    End Sub

	'
	'----------------------------------------------------------------------------------
	'--- CREATE ONE BORDER OUT CHKPRODUTOCONHECIDO ON SELECTED
	'----------------------------------------------------------------------------------
	Private ctrlrect As New Rectangle(0, 0, 0, 0)

	Private Sub chkProdutoConhecido_Enter(sender As Object, e As EventArgs) Handles chkProdutoConhecido.Enter
		Dim ctrl As Control = DirectCast(sender, Control)
		ctrlrect = New Rectangle(ctrl.Location.X - 3, ctrl.Location.Y - 3, ctrl.Width + 6, ctrl.Height + 6)
		Panel4.Refresh()
	End Sub

	Private Sub Panel4_Paint(ByVal sender As Object, ByVal e As PaintEventArgs) Handles Panel4.Paint
		If ctrlrect.Width > 0 Then
			Dim transColor As Color = Color.FromArgb(40, 40, 40, 200)
			e.Graphics.FillRectangle(New SolidBrush(transColor), ctrlrect) 'Draw a filled rectangle with transparent red color
			e.Graphics.DrawRectangle(Pens.Gainsboro, ctrlrect) 'Draw a solid red rectangle as a border
		End If
	End Sub

	Private Sub chkProdutoConhecido_Leave(sender As Object, e As EventArgs) Handles chkProdutoConhecido.Leave
		ctrlrect = New Rectangle(0, 0, 0, 0)
		Panel4.Refresh()
	End Sub
	'----------------------------------------------------------------------------------
